//// 3.7.6 list数据存取
//// 作用：对list容器中数据进行存取
//// 函数原型：
//// front(); // 返回第一个元素
//// back(); // 返回最后一个元素
//
//#include<iostream>
//#include<list>
//
//using namespace std;
//
//void test1()
//{
//	list<int> L;
//
//	L.push_back(10);
//	L.push_back(20);
//	L.push_back(30);
//	L.push_back(40);
//
//	//L[0] // 不可以用[]方式访问list容器中的元素
//	//L.at(0) // 不可以使用at方式访问list容器中的元素
//
//	// 原因是list本质是链表，不是用连续线性空间存储数据的，迭代器也是不支持随机访问的
//
//	cout << "第一个元素为：" << L.front() << endl;
//	cout << "最后一个元素为：" << L.back() << endl;
//
//	// 验证迭代器是不支持随机访问的 
//	// list容器的迭代器是双向迭代器，不支持随机访问
//	list<int>::iterator it = L.begin();
//	it++; // 支持双向
//	it--;
//	//it = it + 1;// 不支持随机访问
//	// 如果迭代器可以支持 +1 的操作，则证明此迭代器支持随机访问
//	// 如果迭代器可以支持 ++ 和 -- 的操作，则证明此迭代器支持双向
//	// 如果迭代器仅支持 ++ 操作，则证明此迭代器只能向前移动
//}
//
//int main()
//{
//	test1();
//	return 0;
//}
//// 总结：list容器中不可以使用[]和at方式访问数据
//// front(); // 返回第一个元素
//// back(); // 返回最后一个元素