//#include<iostream>
//
//using namespace std;
//// 4.7.3 纯虚函数和抽象类
//// 在多态中，通常父类中的虚函数实现是毫无意义的，主要都是调用子类中重写的内容
//// 因此将虚函数改为纯虚函数
//// 纯虚函数语法：virtul 返回值类型 函数名(参数列表) = 0;
//// 当类中有纯虚函数，该类也称抽象类
//// 抽象类特点：
//// 无法实例化对象
//// 子类必须重写抽象类中的纯虚函数，否则也属于抽象类
//
//class Base
//{
//public:
//	// 纯虚函数
//	// 当类中有纯虚类，这个类称为抽象类
//	// 抽象类特点：
//	// 1. 不可以实例化对象
//	// 2. 子类中必须要重写抽象类中的纯虚函数，否则子类也是抽象类
//	virtual void func() = 0;
//};
//class Son :public Base
//{
//public:
//	virtual void func()
//	{
//		cout << "func()函数的调用" << endl;
//	}
//
//};
//void test1()
//{
//	// 抽象类不能实例化对象，不管是在堆区还是在栈区，都不可以
//	//Base b; // error
//	//new Base; // error
//
//	// 子类中必须重写父类中的纯虚函数，否则无法实例化对象
//	Son s; 
//
//	Base* base = new Son;
//	base->func();
//}
//int main()
//{
//	test1();
//	return 0;
//}