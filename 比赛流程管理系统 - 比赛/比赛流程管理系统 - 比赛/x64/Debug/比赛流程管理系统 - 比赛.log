  speechManager.cpp
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\Speaker.h(1,1): warning C4828: 文件包含在偏移 0x12a 处开始的字符，该字符在当前源字符集中无效(代码页 936)。
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\speechManager.cpp(129,20): warning C4244: “参数”: 从“double”转换到“_Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\speechManager.cpp(297,31): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1451,27): warning C4244: “参数”: 从“const _Kty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Kty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1450): message : 查看对正在编译的函数 模板 实例化“bool std::_Debug_lt_pred<const std::greater<int>&,const _Keyty&,const _Kty&,0>(_Pr,_Ty1,_Ty2) noexcept(<expr>)”的引用
          with
          [
              _Keyty=double,
              _Kty=double,
              _Pr=const std::greater<int> &,
              _Ty1=const double &,
              _Ty2=const double &
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(996): message : 查看对正在编译的函数 模板 实例化“std::_Tree_find_result<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Find_upper_bound<_Kty>(const _Keyty &) const”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Keyty=double
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1015): message : 查看对正在编译的函数 模板 实例化“std::_Tree_find_result<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Find_upper_bound<_Kty>(const _Keyty &) const”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Keyty=double
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1033): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Emplace<std::pair<double,int>>(std::pair<double,int> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1034): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Emplace<std::pair<double,int>>(std::pair<double,int> &&)”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\map(497): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::emplace<std::pair<double,int>>(std::pair<double,int> &&)”的引用
          with
          [
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Alloc=std::allocator<std::pair<const double,int>>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\map(498): message : 查看对正在编译的函数 模板 实例化“std::pair<std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>>,bool> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::emplace<std::pair<double,int>>(std::pair<double,int> &&)”的引用
          with
          [
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Alloc=std::allocator<std::pair<const double,int>>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\map(509): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>> std::multimap<double,int,std::greater<int>,std::allocator<std::pair<const double,int>>>::emplace<_Ty>(_Ty &&)”的引用
          with
          [
              _Ty=std::pair<double,int>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\map(509): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>> std::multimap<double,int,std::greater<int>,std::allocator<std::pair<const double,int>>>::emplace<_Ty>(_Ty &&)”的引用
          with
          [
              _Ty=std::pair<double,int>
          ]
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\speechManager.cpp(173): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>> std::multimap<double,int,std::greater<int>,std::allocator<std::pair<const double,int>>>::insert<std::pair<double,int>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<double,int>
          ]
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\speechManager.cpp(173): message : 查看对正在编译的函数 模板 实例化“std::_Tree_iterator<std::_Tree_val<std::_Tree_simple_types<std::pair<const double,int>>>> std::multimap<double,int,std::greater<int>,std::allocator<std::pair<const double,int>>>::insert<std::pair<double,int>,0>(_Valty &&)”的引用
          with
          [
              _Valty=std::pair<double,int>
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1451,20): warning C4244: “参数”: 从“const _Keyty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Keyty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1451,62): warning C4244: “参数”: 从“const _Keyty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Keyty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1451,54): warning C4244: “参数”: 从“const _Kty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Kty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1453,57): warning C4244: “参数”: 从“const _Kty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Kty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1580): message : 查看对正在编译的函数 模板 实例化“bool std::_Debug_lt_pred<const std::greater<int>&,const _Keyty&,const _Kty&,0>(_Pr,_Ty1,_Ty2) noexcept(false)”的引用
          with
          [
              _Keyty=double,
              _Kty=double,
              _Pr=const std::greater<int> &,
              _Ty1=const double &,
              _Ty2=const double &
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(996): message : 查看对正在编译的函数 模板 实例化“std::_Tree_find_result<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Find_upper_bound<_Kty>(const _Keyty &) const”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Keyty=double
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xtree(1015): message : 查看对正在编译的函数 模板 实例化“std::_Tree_find_result<std::_Tree_node<std::pair<const double,int>,std::_Default_allocator_traits<_Alloc>::void_pointer> *> std::_Tree<std::_Tmap_traits<_Kty,_Ty,_Pr,_Alloc,true>>::_Find_upper_bound<_Kty>(const _Keyty &) const”的引用
          with
          [
              _Alloc=std::allocator<std::pair<const double,int>>,
              _Kty=double,
              _Ty=int,
              _Pr=std::greater<int>,
              _Keyty=double
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1453,50): warning C4244: “参数”: 从“const _Keyty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Keyty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1455,9): warning C4244: “参数”: 从“const _Keyty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Keyty=double
          ]
          and
          [
              _Ty=int
          ]
C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.32.31326\include\xutility(1455,9): warning C4244: “参数”: 从“const _Kty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Kty=double
          ]
          and
          [
              _Ty=int
          ]
  演讲比赛流程管理系统.cpp
D:\2022C_code\基于STL的演讲比赛流程管理系统 - 3\基于STL的演讲比赛流程管理系统 - 3\Speaker.h(1,1): warning C4828: 文件包含在偏移 0x12a 处开始的字符，该字符在当前源字符集中无效(代码页 936)。
  正在生成代码...
  比赛流程管理系统 - 比赛.vcxproj -> D:\2022C_code\比赛流程管理系统 - 比赛\x64\Debug\比赛流程管理系统 - 比赛.exe
